name: Deploy Java App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install -DskipTests
        working-directory: Flight

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "Flight/target/Flight-0.0.1-SNAPSHOT.jar"
          target: "/home/ec2-user/your-app/"
          overwrite: true

      - name: SSH and Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          envs: DB_URL,DB_USERNAME,DB_PASSWORD,JWT_SECRET
          script: |
            echo "Installing Java 21 if not already installed..."
            sudo yum install java-21-amazon-corretto -y || true

            echo "Killing any existing Java processes..."
            pkill -f 'java -jar' || true

            echo "Creating .env file with secrets..."
            cat <<EOF > /home/ec2-user/your-app/app.env
            DB_URL=$DB_URL
            DB_USERNAME=$DB_USERNAME
            DB_PASSWORD=$DB_PASSWORD
            JWT_SECRET=$JWT_SECRET
            EOF

            echo "Starting application..."
            cd /home/ec2-user/your-app
            nohup env $(cat app.env | xargs) java -jar Flight-0.0.1-SNAPSHOT.jar > app.log 2>&1 & disown
            echo "App started in background. Logs available at /home/ec2-user/your-app/app.log"

            sleep 3
            exit 0
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
